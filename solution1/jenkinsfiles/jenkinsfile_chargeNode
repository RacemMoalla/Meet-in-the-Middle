pipeline {
    agent any

    environment {
        KUBE_CONFIG_PATH_EU = credentials('kub-eu')
    }

    stages {
        stage('Install kubectl') {
            steps {
                script {
                    sh '''
                    curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt
                    curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
                    chmod +x ./kubectl
                    '''
                }
            }
        }

        stage('Apply Load Generator Pod') {
            steps {
                script {
                    writeFile file: 'load-generator.yaml', text: '''apiVersion: v1
kind: Pod
metadata:
  name: load-generator
  labels:
    app: load-generator
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/hostname
            operator: In
            values:
            - gke-eur-cluster-default-pool-b14a7988-tdzq
  containers:
  - name: stress-ng
    image: polinux/stress-ng
    args:
    - --cpu
    - "4"
    - --io
    - "2"
    - --vm
    - "4"
    - --vm-bytes
    - "128M"
    - --timeout
    - "600s"
    resources:
      requests:
        memory: "1000Mi"
        cpu: "400m"
      limits:
        memory: "1Gi"
        cpu: "2"
'''
                }
                withKubeConfig(credentialsId: 'kub-eu', caCertificate: '', serverUrl: 'https://34.155.234.23') {
                    sh './kubectl apply --validate=false -f load-generator.yaml'
                }
            }
        }

        stage('Monitor Node Resources') {
            steps {
                script {
                    withKubeConfig(credentialsId: 'kub-eu', caCertificate: '', serverUrl: 'https://34.155.234.23') {
                        for (int i = 0; i < 10; i++) {
                            sh 'sleep 10'
                            def result = sh(script: './kubectl top nodes gke-eur-cluster-default-pool-b14a7988-tdzq', returnStdout: true).trim()
                            echo "Node gke-eur-cluster-default-pool-b14a7988-tdzq Resource Usage: ${result}"
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            script {
                withKubeConfig(credentialsId: 'kub-eu', caCertificate: '', serverUrl: 'https://34.155.234.23') {
                    sh 'curl -LO "https://storage.googleapis.com/kubernetes-release/release/v1.20.5/bin/linux/amd64/kubectl"' 
                    sh 'chmod u+x ./kubectl'
                    sh './kubectl delete pod load-generator'
                }
            }
        }
    }
}
